# Django settings
DEBUG=True                              # Set to False in production
SECRET_KEY=your_secret_key_here         # Replace with your Django secret key
ALLOWED_HOSTS=127.0.0.1,localhost       # Comma-separated list of allowed hosts

# Database configuration
DATABASE_ENGINE=django.db.backends.postgresql   # Database engine (e.g., postgresql, sqlite3, mysql)
DATABASE_NAME=your_database_name                # Name of your database
DATABASE_USER=your_database_user                # Username to access the database
DATABASE_PASSWORD=your_database_password        # Password to access the database
DATABASE_HOST=127.0.0.1                         # Database host (localhost or IP address)
DATABASE_PORT=5432                              # Database port (PostgreSQL default is 5432)

# Email configuration
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.example.com                     # SMTP server address
EMAIL_PORT=587                                  # SMTP server port
EMAIL_USE_TLS=True                              # Use TLS for secure email
EMAIL_HOST_USER=your_email@example.com          # Email username
EMAIL_HOST_PASSWORD=your_email_password         # Email password

# Static and media files
STATIC_URL=/static/                             # URL for serving static files
MEDIA_URL=/media/                               # URL for serving media files
STATIC_ROOT=/path/to/static                     # Absolute path for collecting static files
MEDIA_ROOT=/path/to/media                       # Absolute path for storing uploaded media

# Celery configuration (if using Celery for task queues)
CELERY_BROKER_URL=redis://127.0.0.1:6379/0      # URL for the Celery broker (e.g., Redis)
CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0  # URL for the Celery result backend (e.g., Redis)

# Redis cache configuration
CACHE_BACKEND=django.core.cache.backends.redis.RedisCache
CACHE_LOCATION=redis://127.0.0.1:6379/1         # Redis URL for caching

# Third-party API keys
GOOGLE_API_KEY=your_google_api_key              # Replace with your Google API key
STRIPE_SECRET_KEY=your_stripe_secret_key        # Replace with your Stripe secret key
STRIPE_PUBLISHABLE_KEY=your_stripe_publishable_key  # Replace with your Stripe publishable key

# Sentry (for error tracking)
SENTRY_DSN=https://your_sentry_dsn_here         # Sentry Data Source Name (DSN)

# JWT authentication configuration
JWT_ACCESS_TOKEN_LIFETIME=300                   # Access token lifetime in seconds
JWT_REFRESH_TOKEN_LIFETIME=3600                 # Refresh token lifetime in seconds

# Logging configuration
LOG_LEVEL=INFO                                  # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)

# MinIO / S3 configuration
USE_S3=True                                     # Enable S3 compatible storage
AWS_ACCESS_KEY_ID=minioadmin                    # MinIO access key (default: minioadmin)
AWS_SECRET_ACCESS_KEY=minioadmin                # MinIO secret key (default: minioadmin)
AWS_STORAGE_BUCKET_NAME=purepost-media          # S3 bucket name for media storage
AWS_S3_ENDPOINT_URL=http://localhost:9000           # MinIO server endpoint (in Docker: minio:9000)
AWS_S3_VERIFY=False                             # Verify SSL certificates (set to True in production)

# MinIO Docker configuration
MINIO_PORT=9000                                 # MinIO API port
MINIO_CONSOLE_PORT=9001                         # MinIO web console port

# Custom environment variables
CUSTOM_SETTING=your_custom_value